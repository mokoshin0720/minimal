sudo: required

services: docker

before_install:
  - docker-compose build
  - docker-compose up -d
  - docker-compose exec db psql --username=postgres -c "ALTER ROLE postgres CREATEDB";
  - docker login -u "$HEROKU_USERNAME" -p "$HEROKU_API_KEY" registry.heroku.com

script:
  - sleep 30
  - docker-compose exec -e SECRET_KEY=$SECRET_KEY -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_STORAGE_BUCKET_NAME=$AWS_STORAGE_BUCKET_NAME -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -e DATABASE_URL=$DATABASE_URL -e DEBUG_COLLECTSTATIC=$DEBUG_COLLECTSTATIC -e DISABLE_COLLECTSTATIC=$DISABLE_COLLECTSTATIC -e S3_BUCKET=$S3_BUCKET -e PRODUCTION_ENV=$PRODUCTION_ENV -e PYTHONDONTWRITEBYTECODE=1 web python manage.py test

deploy:
  provider: script
  script:
    docker build -t registry.heroku.com/$HEROKU_APP_NAME/web --build-arg SECRET_KEY="$SECRET_KEY" --build-arg AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" --build-arg AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" --build-arg AWS_STORAGE_BUCKET_NAME="$AWS_STORAGE_BUCKET_NAME" .;
    docker push registry.heroku.com/$HEROKU_APP_NAME/web;
    heroku config -a $HEROKU_APP_NAME;
    heroku run --app $HEROKU_APP_NAME python manage.py collectstatic --noinput;
    heroku run --app $HEROKU_APP_NAME python manage.py migrate;
  on:
    branch: main